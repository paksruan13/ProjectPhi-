datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum UserRole {
  STUDENT 
  COACH
  ADMIN
}

model Team {
  id        String    @id @default(uuid())
  name      String    @unique
  teamCode  String    @unique
  isActive  Boolean  @default(true)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  members   User[]
  donations Donation[]
  photos    Photo[]
  shirtSales ShirtSale[]
  coachId   String?
  coach     User?     @relation("CoachTeams", fields: [coachId], references: [id])
}

model User {
  id        String    @id @default(uuid())
  name      String
  email     String    @unique
  password  String    @default("CHANGE_ME")
  team      Team?     @relation(fields: [teamId], references: [id])
  teamId    String?
  role      UserRole  @default(STUDENT)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now())
  isActive  Boolean   @default(true)
  donations    Donation[]
  coachedTeams  Team[]  @relation("CoachTeams")
}

model Donation {
  id              String   @id @default(cuid())
  amount          Float
  currency        String   @default("usd")
  stripeSessionId String?  @unique
  createdAt       DateTime @default(now())
  user            User?    @relation(fields: [userId], references: [id])
  userId          String?
  team            Team     @relation(fields: [teamId], references: [id])
  teamId          String
}

model Photo {
  id        String   @id @default(uuid())
  url       String
  approved  Boolean  @default(false)
  team      Team     @relation(fields: [teamId], references: [id])
  teamId    String
  uploadedAt DateTime @default(now())
}

model ShirtSale {
  id        String   @id @default(uuid())
  quantity  Int
  team      Team     @relation(fields: [teamId], references: [id])
  teamId    String
  soldAt    DateTime @default(now())
}